1.ServletContext, HttpSession, Cookie, HttpServletRequest는 상태정보를 유지하기 위한 저장소 역할을 한다.

2.상태 정보를 유지하기 위해 정보를 등록할 때는 setAttribute(), 등록된 정보를 추출할 때는 getAttribute(),
  등록된 정보를 삭제할 때는 removeAttribute() 메소드를 사용한다.

3.ServletContext의 주요 기능은 서버 정보 추출, 로그 기록, 웹 애플리케이션 단위 정보 유지이다.

4.Cookie는 텍스트 형태의 데이터를 클라이언트 측에 저장하는 상태정보 유지기술이다.

5.HttpSession은 클라이언트 단위로 서버에 생성되는 객체이며 세션마다 ID가 부여 된다.
  세션 ID는 쿠키로 클라이언트에 전송된다.

6.HttpServletRequest의 getSession(), getSession(boolean) 메소드는 HttpSession을 반환한다.

7.getSession()과 getSession(true)는 세션이 없는 경우 새로 생성하여 반환하며 getSession(false)는 null을 반환한다.

8.HttpSession의 isNew() 메소드는 반환된 세션 객체의 생성 여부를 판단한다.

9.HttpSession의 invailddate() 메소드는 세션을 삭제한다.

10.HttpSession의 setInactiveInterval() 메소드는 세션의 유효시간을 설정한다.

11.HttpServletResponse의 sendRedirect() 메소드는 다른 서버의 자원으로도 요청 재지정이 가능하다.

12.RequestDispatcher의 foward()와 include() 메소드는 동일 웹 애플리케이션의 자원만 요청 재지정이 가능하다.

13.RequestDispatcher의 메소드로 요청 재지정된 경우 HttpServletRequest와 HttpServletResponse 객체가 그대로 유지된다.

14.동일 요청에서 실행된 문서들은 HttpServletRequest을 통한 데이터 유지가 가능하다.